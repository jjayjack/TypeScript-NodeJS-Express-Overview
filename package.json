{
  "name": "typescript-nodejs-express-overview",
  "version": "1.0.0",
  "description": "Working with TypeScript to build a REST API with NodeJS and Express. NodeJS is not capable of running TypeScript as a file but can run found JavaScript code. For example compiling the script `console.log(\"Hello terminal!\")` within app.ts with command node app.ts will print Hello terminal! within terminal but `let hello: string; hello = \"Hello terminal!\"; console.log(hello);` will compile with an error because regular JavaScript does not define type with `let hello: string`. One way to navigate working with TypeScript within NodeJS is using a third party [Node Type library](https://github.com/TypeStrong/ts-node) that will configure types set in a TypeScript file for compilation. This is a great solution for Developer Code vs Production Code but within this overview, a different approach will be used.",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jjayjack/TypeScript-NodeJS-Express-Overview.git"
  },
  "author": "Jocelyn Jayjack",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/jjayjack/TypeScript-NodeJS-Express-Overview/issues"
  },
  "homepage": "https://github.com/jjayjack/TypeScript-NodeJS-Express-Overview#readme",
  "dependencies": {
    "body-parser": "^1.20.0",
    "express": "^4.18.1"
  },
  "devDependencies": {
    "@types/express": "^4.17.13",
    "@types/node": "^18.6.1",
    "nodemon": "^2.0.19"
  }
}
